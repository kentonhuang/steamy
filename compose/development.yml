version: '3'
services:
  db:
    image: 'postgres:10.4-alpine'
    ports:
      - '5432:5432'
    volumes:
      - '/var/lib/postgresql/data'
    restart: always
  app:
    build:
      context: ..
      dockerfile: ./build/django.Dockerfile
      args:
        - DJANGO_ENV=development
    image: 'example/django_api'
    env_file: 'envs/backend_development.env'
    ports:
      - '8000:8000'
    depends_on:
      - db
    restart: always
  frontend:
    build:
      context: ..
      dockerfile: ./build/frontend.Dockerfile
      args:
        - REACT_ENV=development
    image: 'example/frontend'
    env_file: 'envs/frontend_development.env'
    ports:
      - '3000:3000'
    restart: always
  redis:
    image: "redis:alpine"
    ports:
      - '6379:6379'
  celery:
    build: 
      context: ..
      dockerfile: ./build/django.Dockerfile
      args:
        - DJANGO_ENV=development
    command: celery -A example worker -l info
    depends_on:
      - app
  celery-beat:
    build:
      context: ..
      dockerfile: ./build/django.Dockerfile
      args:
        - DJANGO_ENV=development
    command: celery -A example beat -l info
    depends_on :
      - app
  selenium-hub:
    image: selenium/hub
    container_name: selenium-hub
    ports:
      - "4444:4444"
  chrome:
    image: selenium/node-chrome
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
